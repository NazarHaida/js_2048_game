{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $197cd56b15c33885$var$ARROW_LEFT = \"ArrowLeft\";\nvar $197cd56b15c33885$var$ARROW_RIGHT = \"ArrowRight\";\nvar $197cd56b15c33885$var$ARROW_UP = \"ArrowUp\";\nvar $197cd56b15c33885$var$ARROW_DOWN = \"ArrowDown\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.board = initialState.map(function(row) {\n            return row.slice();\n        });\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"placeRandomTile\",\n            value: function placeRandomTile() {\n                var emptyCells = [];\n                for(var row = 0; row < 4; row++){\n                    for(var col = 0; col < 4; col++)if (this.board[row][col] === 0) emptyCells.push({\n                        row: row,\n                        col: col\n                    });\n                }\n                if (emptyCells.length > 0) {\n                    var _emptyCells_Math_floor = emptyCells[Math.floor(Math.random() * emptyCells.length)], row1 = _emptyCells_Math_floor.row, col1 = _emptyCells_Math_floor.col;\n                    this.board[row1][col1] = Math.random() < 0.1 ? 4 : 2;\n                }\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this, _loop = function(row) {\n                    var newRow = _this.board[row].filter(function(tile) {\n                        return tile !== 0;\n                    });\n                    for(var col = 0; col < newRow.length - 1; col++)if (newRow[col] === newRow[col + 1]) {\n                        newRow[col] *= 2;\n                        _this.score += newRow[col];\n                        newRow.splice(col + 1, 1);\n                        newRow.push(0);\n                    }\n                    while(newRow.length < 4)newRow.push(0);\n                    if (!_this.arraysEqual(newRow, _this.board[row])) {\n                        boardChanged = true;\n                        _this.board[row] = newRow;\n                    }\n                };\n                var boardChanged = false;\n                for(var row = 0; row < 4; row++)_loop(row);\n                if (boardChanged) {\n                    this.placeRandomTile();\n                    if (this.checkWin()) return;\n                    this.checkGameOver();\n                }\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this, _loop = function(row) {\n                    var newRow = _this.board[row].reverse().filter(function(tile) {\n                        return tile !== 0;\n                    });\n                    for(var col = 0; col < newRow.length - 1; col++)if (newRow[col] === newRow[col + 1]) {\n                        newRow[col] *= 2;\n                        _this.score += newRow[col];\n                        newRow.splice(col + 1, 1);\n                        newRow.push(0);\n                    }\n                    while(newRow.length < 4)newRow.push(0);\n                    newRow.reverse();\n                    if (!_this.arraysEqual(newRow, _this.board[row])) {\n                        boardChanged = true;\n                        _this.board[row] = newRow;\n                    }\n                };\n                var boardChanged = false;\n                for(var row = 0; row < 4; row++)_loop(row);\n                if (boardChanged) {\n                    this.placeRandomTile();\n                    if (this.checkWin()) return;\n                    this.checkGameOver();\n                }\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var boardChanged = false;\n                for(var col = 0; col < 4; col++){\n                    var newCol = [];\n                    for(var row = 0; row < 4; row++)if (this.board[row][col] !== 0) newCol.push(this.board[row][col]);\n                    for(var i = 0; i < newCol.length - 1; i++)if (newCol[i] === newCol[i + 1]) {\n                        newCol[i] *= 2;\n                        this.score += newCol[i];\n                        newCol.splice(i + 1, 1);\n                        newCol.push(0);\n                    }\n                    while(newCol.length < 4)newCol.push(0);\n                    for(var row1 = 0; row1 < 4; row1++)if (this.board[row1][col] !== newCol[row1]) {\n                        boardChanged = true;\n                        this.board[row1][col] = newCol[row1];\n                    }\n                }\n                if (boardChanged) {\n                    this.placeRandomTile();\n                    if (this.checkWin()) return;\n                    this.checkGameOver();\n                }\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var boardChanged = false;\n                for(var col = 0; col < 4; col++){\n                    var newCol = [];\n                    for(var row = 3; row >= 0; row--)if (this.board[row][col] !== 0) newCol.push(this.board[row][col]);\n                    for(var i = 0; i < newCol.length - 1; i++)if (newCol[i] === newCol[i + 1]) {\n                        newCol[i] *= 2;\n                        this.score += newCol[i];\n                        newCol.splice(i + 1, 1);\n                        newCol.push(0);\n                    }\n                    while(newCol.length < 4)newCol.push(0);\n                    for(var row1 = 3; row1 >= 0; row1--)if (this.board[row1][col] !== newCol[3 - row1]) {\n                        boardChanged = true;\n                        this.board[row1][col] = newCol[3 - row1];\n                    }\n                }\n                if (boardChanged) {\n                    this.placeRandomTile();\n                    if (this.checkWin()) return;\n                    this.checkGameOver();\n                }\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board.map(function(row) {\n                    return row.slice();\n                });\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = \"playing\";\n                this.score = 0;\n                this.board = [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n                this.placeRandomTile();\n                this.placeRandomTile();\n            }\n        },\n        {\n            key: \"arraysEqual\",\n            value: function arraysEqual(arr1, arr2) {\n                if (arr1.length !== arr2.length) return false;\n                for(var i = 0; i < arr1.length; i++){\n                    if (arr1[i] !== arr2[i]) return false;\n                }\n                return true;\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                this.status = \"idle\";\n                this.start();\n            }\n        },\n        {\n            key: \"checkWin\",\n            value: function checkWin() {\n                for(var row = 0; row < 4; row++){\n                    for(var col = 0; col < 4; col++)if (this.board[row][col] === 2048) {\n                        this.status = \"win\";\n                        return true;\n                    }\n                }\n                return false;\n            }\n        },\n        {\n            key: \"checkGameOver\",\n            value: function checkGameOver() {\n                for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n                    if (this.board[row][col] === 0) return false;\n                }\n                for(var row1 = 0; row1 < 4; row1++)for(var col1 = 0; col1 < 4; col1++){\n                    if (col1 < 3 && this.board[row1][col1] === this.board[row1][col1 + 1]) return false;\n                    if (row1 < 3 && this.board[row1][col1] === this.board[row1 + 1][col1]) return false;\n                }\n                this.status = \"lose\";\n                return true;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$startBtn = document.querySelector(\".button.start\");\ndocument.addEventListener(\"keydown\", function() {\n    if ($197cd56b15c33885$var$game.getStatus() !== \"playing\") return;\n    var moveMade = false;\n    switch(event.key){\n        case $197cd56b15c33885$var$ARROW_LEFT:\n            $197cd56b15c33885$var$game.moveLeft();\n            moveMade = true;\n            break;\n        case $197cd56b15c33885$var$ARROW_RIGHT:\n            $197cd56b15c33885$var$game.moveRight();\n            moveMade = true;\n            break;\n        case $197cd56b15c33885$var$ARROW_UP:\n            $197cd56b15c33885$var$game.moveUp();\n            moveMade = true;\n            break;\n        case $197cd56b15c33885$var$ARROW_DOWN:\n            $197cd56b15c33885$var$game.moveDown();\n            moveMade = true;\n            break;\n    }\n    if (moveMade) {\n        $197cd56b15c33885$var$update();\n        if ($197cd56b15c33885$var$game.getStatus() === \"win\") $197cd56b15c33885$var$showWin();\n        else if ($197cd56b15c33885$var$game.getStatus() === \"lose\") $197cd56b15c33885$var$showLose();\n    }\n});\nfunction $197cd56b15c33885$var$update() {\n    var board = $197cd56b15c33885$var$game.getState();\n    var cells = document.querySelectorAll(\".field-cell\");\n    var cellIndex = 0;\n    for(var row = 0; row < 4; row++)for(var col = 0; col < 4; col++){\n        var value = board[row][col];\n        var cell = cells[cellIndex];\n        cell.textContent = value === 0 ? \"\" : value;\n        cell.className = \"field-cell field-cell--\".concat(value);\n        cellIndex++;\n    }\n    document.querySelector(\".game-score\").textContent = $197cd56b15c33885$var$game.getScore();\n}\nfunction $197cd56b15c33885$var$showWin() {\n    document.querySelector(\".message-win\").classList.remove(\"hidden\");\n}\nfunction $197cd56b15c33885$var$showLose() {\n    document.querySelector(\".message-lose\").classList.remove(\"hidden\");\n}\nfunction $197cd56b15c33885$var$hideMessages() {\n    document.querySelector(\".message-win\").classList.add(\"hidden\");\n    document.querySelector(\".message-lose\").classList.add(\"hidden\");\n    document.querySelector(\".message-start\").classList.add(\"hidden\");\n}\n$197cd56b15c33885$var$startBtn.addEventListener(\"click\", function() {\n    $197cd56b15c33885$var$startBtn.textContent = \"Restart\";\n    if ($197cd56b15c33885$var$game.getStatus() === \"win\" || $197cd56b15c33885$var$game.getStatus() === \"idle\" || $197cd56b15c33885$var$game.getStatus() === \"lose\" || $197cd56b15c33885$var$game.getStatus() === \"playing\") {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$update();\n        $197cd56b15c33885$var$hideMessages();\n        $197cd56b15c33885$var$startBtn.textContent = \"Restart\";\n    }\n});\n\n})();\n//# sourceMappingURL=index.569ffe1c.js.map\n","'use strict';\n\nconst ARROW_LEFT = 'ArrowLeft';\nconst ARROW_RIGHT = 'ArrowRight';\nconst ARROW_UP = 'ArrowUp';\nconst ARROW_DOWN = 'ArrowDown';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst startBtn = document.querySelector('.button.start');\n\ndocument.addEventListener('keydown', () => {\n  if (game.getStatus() !== 'playing') {\n    return;\n  }\n\n  let moveMade = false;\n\n  switch (event.key) {\n    case ARROW_LEFT:\n      game.moveLeft();\n      moveMade = true;\n      break;\n\n    case ARROW_RIGHT:\n      game.moveRight();\n      moveMade = true;\n      break;\n\n    case ARROW_UP:\n      game.moveUp();\n      moveMade = true;\n      break;\n\n    case ARROW_DOWN:\n      game.moveDown();\n      moveMade = true;\n      break;\n  }\n\n  if (moveMade) {\n    update();\n\n    if (game.getStatus() === 'win') {\n      showWin();\n    } else if (game.getStatus() === 'lose') {\n      showLose();\n    }\n  }\n});\n\nfunction update() {\n  const board = game.getState();\n  const cells = document.querySelectorAll('.field-cell');\n  let cellIndex = 0;\n\n  for (let row = 0; row < 4; row++) {\n    for (let col = 0; col < 4; col++) {\n      const value = board[row][col];\n      const cell = cells[cellIndex];\n\n      cell.textContent = value === 0 ? '' : value;\n      cell.className = `field-cell field-cell--${value}`;\n\n      cellIndex++;\n    }\n  }\n\n  document.querySelector('.game-score').textContent = game.getScore();\n}\n\nfunction showWin() {\n  document.querySelector('.message-win').classList.remove('hidden');\n}\n\nfunction showLose() {\n  document.querySelector('.message-lose').classList.remove('hidden');\n}\n\nfunction hideMessages() {\n  document.querySelector('.message-win').classList.add('hidden');\n  document.querySelector('.message-lose').classList.add('hidden');\n  document.querySelector('.message-start').classList.add('hidden');\n}\n\nstartBtn.addEventListener('click', () => {\n  startBtn.textContent = 'Restart';\n\n  if (\n    game.getStatus() === 'win' ||\n    game.getStatus() === 'idle' ||\n    game.getStatus() === 'lose' ||\n    game.getStatus() === 'playing'\n  ) {\n    game.restart();\n    update();\n    hideMessages();\n    startBtn.textContent = 'Restart';\n  }\n});\n","'use strict';\n\nclass Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.board = initialState.map((row) => row.slice());\n\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  placeRandomTile() {\n    const emptyCells = [];\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] === 0) {\n          emptyCells.push({ row, col });\n        }\n      }\n    }\n\n    if (emptyCells.length > 0) {\n      const { row, col } =\n        emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n      this.board[row][col] = Math.random() < 0.1 ? 4 : 2;\n    }\n  }\n\n  moveLeft() {\n    let boardChanged = false;\n\n    for (let row = 0; row < 4; row++) {\n      const newRow = this.board[row].filter((tile) => tile !== 0);\n\n      for (let col = 0; col < newRow.length - 1; col++) {\n        if (newRow[col] === newRow[col + 1]) {\n          newRow[col] *= 2;\n          this.score += newRow[col];\n          newRow.splice(col + 1, 1);\n          newRow.push(0);\n        }\n      }\n\n      while (newRow.length < 4) {\n        newRow.push(0);\n      }\n\n      if (!this.arraysEqual(newRow, this.board[row])) {\n        boardChanged = true;\n        this.board[row] = newRow;\n      }\n    }\n\n    if (boardChanged) {\n      this.placeRandomTile();\n\n      if (this.checkWin()) {\n        return;\n      }\n\n      if (this.checkGameOver()) {\n      }\n    }\n  }\n\n  moveRight() {\n    let boardChanged = false;\n\n    for (let row = 0; row < 4; row++) {\n      const newRow = this.board[row].reverse().filter((tile) => tile !== 0);\n\n      for (let col = 0; col < newRow.length - 1; col++) {\n        if (newRow[col] === newRow[col + 1]) {\n          newRow[col] *= 2;\n          this.score += newRow[col];\n          newRow.splice(col + 1, 1);\n          newRow.push(0);\n        }\n      }\n\n      while (newRow.length < 4) {\n        newRow.push(0);\n      }\n\n      newRow.reverse();\n\n      if (!this.arraysEqual(newRow, this.board[row])) {\n        boardChanged = true;\n        this.board[row] = newRow;\n      }\n    }\n\n    if (boardChanged) {\n      this.placeRandomTile();\n\n      if (this.checkWin()) {\n        return;\n      }\n\n      if (this.checkGameOver()) {\n      }\n    }\n  }\n\n  moveUp() {\n    let boardChanged = false;\n\n    for (let col = 0; col < 4; col++) {\n      const newCol = [];\n\n      for (let row = 0; row < 4; row++) {\n        if (this.board[row][col] !== 0) {\n          newCol.push(this.board[row][col]);\n        }\n      }\n\n      for (let i = 0; i < newCol.length - 1; i++) {\n        if (newCol[i] === newCol[i + 1]) {\n          newCol[i] *= 2;\n          this.score += newCol[i];\n          newCol.splice(i + 1, 1);\n          newCol.push(0);\n        }\n      }\n\n      while (newCol.length < 4) {\n        newCol.push(0);\n      }\n\n      for (let row = 0; row < 4; row++) {\n        if (this.board[row][col] !== newCol[row]) {\n          boardChanged = true;\n          this.board[row][col] = newCol[row];\n        }\n      }\n    }\n\n    if (boardChanged) {\n      this.placeRandomTile();\n\n      if (this.checkWin()) {\n        return;\n      }\n\n      if (this.checkGameOver()) {\n      }\n    }\n  }\n\n  moveDown() {\n    let boardChanged = false;\n\n    for (let col = 0; col < 4; col++) {\n      const newCol = [];\n\n      for (let row = 3; row >= 0; row--) {\n        if (this.board[row][col] !== 0) {\n          newCol.push(this.board[row][col]);\n        }\n      }\n\n      for (let i = 0; i < newCol.length - 1; i++) {\n        if (newCol[i] === newCol[i + 1]) {\n          newCol[i] *= 2;\n          this.score += newCol[i];\n          newCol.splice(i + 1, 1);\n          newCol.push(0);\n        }\n      }\n\n      while (newCol.length < 4) {\n        newCol.push(0);\n      }\n\n      for (let row = 3; row >= 0; row--) {\n        if (this.board[row][col] !== newCol[3 - row]) {\n          boardChanged = true;\n          this.board[row][col] = newCol[3 - row];\n        }\n      }\n    }\n\n    if (boardChanged) {\n      this.placeRandomTile();\n\n      if (this.checkWin()) {\n        return;\n      }\n\n      if (this.checkGameOver()) {\n      }\n    }\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.board.map((row) => row.slice());\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = 'playing';\n    this.score = 0;\n\n    this.board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n    this.placeRandomTile();\n    this.placeRandomTile();\n  }\n\n  arraysEqual(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n      return false;\n    }\n\n    for (let i = 0; i < arr1.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.status = 'idle';\n    this.start();\n  }\n\n  checkWin() {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] === 2048) {\n          this.status = 'win';\n\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  checkGameOver() {\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (this.board[row][col] === 0) {\n          return false;\n        }\n      }\n    }\n\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (col < 3 && this.board[row][col] === this.board[row][col + 1]) {\n          return false;\n        }\n\n        if (row < 3 && this.board[row][col] === this.board[row + 1][col]) {\n          return false;\n        }\n      }\n    }\n\n    this.status = 'lose';\n\n    return true;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n"],"names":["$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","length","instance","Constructor","TypeError","board","map","row","slice","score","status","key","value","emptyCells","col","push","_emptyCells_Math_floor","Math","floor","random","row1","col1","_this","boardChanged","_loop","newRow","filter","tile","splice","arraysEqual","placeRandomTile","checkWin","checkGameOver","reverse","newCol","i","arr1","arr2","start","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","prototype","$197cd56b15c33885$var$startBtn","document","querySelector","$197cd56b15c33885$var$update","getState","cells","querySelectorAll","cellIndex","cell","textContent","className","concat","getScore","addEventListener","getStatus","moveMade","event","moveLeft","moveRight","moveUp","moveDown","classList","remove","restart","add"],"version":3,"file":"index.569ffe1c.js.map"}